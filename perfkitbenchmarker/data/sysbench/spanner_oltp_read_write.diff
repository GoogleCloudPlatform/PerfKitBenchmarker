diff --git a/src/lua/oltp_read_write.lua b/src/lua/oltp_read_write.lua
index e3ac4de..4c2c129 100644
--- a/src/lua/oltp_read_write.lua
+++ b/src/lua/oltp_read_write.lua
@@ -21,6 +21,44 @@
 
 require("oltp_common")
 
+function set_isolation_level(drv,con)
+   if drv:name() == "pgsql"
+   then
+        if sysbench.opt.trx_level == "RR" then
+            isolation_level="REPEATABLE READ"
+        elseif sysbench.opt.trx_level == "RC" then
+            isolation_level="READ COMMITTED"
+        elseif sysbench.opt.trx_level == "SER" then
+            isolation_level="SERIALIZABLE"
+        end
+
+        con:query("SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL " .. isolation_level )
+   end
+
+end
+
+
+-- This function is called once per thread at the beginning of the run phase
+function thread_init()
+   drv = sysbench.sql.driver()
+   con = drv:connect()
+   -- Create global nested tables for prepared statements and their
+   -- parameters. We need a statement and a parameter set for each combination
+   -- of connection/table/query
+   stmt = {}
+   param = {}
+
+   for t = 1, sysbench.opt.tables do
+      stmt[t] = {}
+      param[t] = {}
+   end
+
+   -- This function is a 'callback' defined by individual benchmark scripts
+   prepare_statements()
+   set_isolation_level(drv, con)
+end
+
+
 function prepare_statements()
    if not sysbench.opt.skip_trx then
       prepare_begin()
