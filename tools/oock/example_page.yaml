latency_vs_size_sizes: &latency_vs_size_sizes
>
  [1, 64, 512, 1000, 4000, 16000, 32000, 64000, 128000, 256000, 512000, 1000000,
   2000000, 6000000, 4000000, 8000000, 12000000, 16000000, 24000000, 32000000,
   40000000, 48000000, 56000000, 64000000, 72000000, 80000000, 88000000,
   96000000, 104000000, 112000000, 120000000, 128000000, 144000000, 160000000,
   176000000, 192000000, 208000000, 224000000, 240000000, 256000000]

################################################################################
# Charts Specs
################################################################################
chart_specs:
  p50_upload_latency_vs_size:
    data_source:
      path: latency_vs_size_in_region.json
      extract:
        type: key_value
        key_order: increasing
        key:
          select: { metadata: [object_size_B] }
          parse: int(object_size_B)
        value:
          select: { sample: [value] }
          parse: float(value)
        group_by:
          select: { metadata: [cloud] }
          parse: "{'GCP': 'GCS', 'AWS': 'S3', 'Azure': 'ABS'}[cloud]"
      filters:
      - select: { sample: [metric] }
        condition: metric == 'Multi-stream upload latency p50'
      - select: { metadata: [object_size_B] }
        condition: ["object_size_B != 'distribution' and ",
                    "int(object_size_B) in ", *latency_vs_size_sizes]
      - select: { metadata: [zone] }
        condition: zone in ['us-west1-a', 'us-west-1a', 'westus']
      - select: { metadata: [regional_bucket_location] }
        condition:
          regional_bucket_location in ['us-west1', 'us-west-1', 'westus']
      - select: { metadata: [objects_per_stream] }
        condition: objects_per_stream == '10000'
    type: visualization.LineChart
    options:
      title: p50 upload latency vs object size
      width: 800
      height: 600
      legend: {position: inside}
      hAxis: {format: short, maxValue: 256000000, title: object size}
      vAxis: {maxValue: 8, title: latency (seconds)}

  cross_zone_upload_latency_distribution_gcs:
    data_source:
      path: cross_zone_variance.gcs.json
      extract:
        type: pair_list
        key_order: increasing
        pair_list:
          select: { metadata: [histogram, interval] }
          parse:
          - "[[int(t * float(interval) * 1000.0), int(c)]"
          - " for t, c in enumerate(histogram.split(',')) if t < 20]"
        group_by:
          select: { metadata: [zone] }
          parse: zone
      filters:
      - select: { metadata: [cloud] }
        condition: cloud == 'GCP'
      - select: { sample: [metric] }
        condition: metric == 'Multi-stream upload latency histogram'
      - select: { metadata: [object_size_B] }
        condition: object_size_B == '1'
      - select: { metadata: [zone, regional_bucket_location] }
        condition: zone[:-2] == regional_bucket_location
      - select: { metadata: [objects_per_stream] }
        condition: objects_per_stream == '1000'
    type: visualization.LineChart
    options:
      title: GCP 1B upload cross zone latency distributions
      width: 800
      height: 600
      legend: {position: right}
      hAxis: {title: latency (ms)}
      vAxis: {title: object count}
      areaOpacity: 0.1
